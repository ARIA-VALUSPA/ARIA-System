<?xml version="1.0" encoding="utf-16" standalone="yes"?>
<pipeline>
	
	<register>		
		<load name="ssiaudio.dll" />
		<load name="ssigraphic.dll" />
		<load name="ssibrowser.dll" />
		<load name="ssiopensmilewrapper.dll" />
		<load name="ssilibsvm.dll"/>
		<load name="ssimodel.dll"/>
		<load name="ssiactivemq.dll"/>
		<load name="ssicamera.dll"/>
		<load name="ssiffmpeg.dll"/>
	</register>
	
	<!-- set framework options -->		
	<framework console="true" cpos="0,0,400,600"/> 
	
	<!-- audio sensor initialization -->
	<gate open="$(live)">
		<sensor create="ssi_sensor_Audio" option="options/audio" sr="44100" scale="true">
			<provider channel="audio" pin="audio"/>		
		</sensor>	
	</gate>
	<gate close="$(live)">
		<sensor create="ssi_sensor_WavReader" path="$(file)" blockInSamples="512" scale="true" loop="true">
			<provider channel="audio" pin="audio"/>		
		</sensor>	 
	</gate>	
	
	<!-- activity detection -->
	<transformer create="ssi_feature_AudioActivity" method="0" threshold="0.05">
		<input pin="audio" frame="0.03s" delta="0.015s"/>
		<output pin="vad"/>
	</transformer>
	<consumer create="ssi_consumer_ZeroEventSender" mindur="0.3" maxdur="5.0" eager="true" hangin="3" hangout="10" sname="audio" ename="vad">
		<input pin="vad" frame="0.1s"/>
	</consumer>	
	
	<!-- feature extraction -->
	<consumer create="ssi_consumer_FloatsEventSender" sname="audio" ename="feature">
		<input pin="audio" listen="vad@audio">
			<transformer create="ssi_feature_OSWrapper" configFile="$(config)"/>
		</input>
	</consumer>
	
	<!-- classifier -->
	<object create="ssi_consumer_Classifier" console="false" trainer="$(model:emotion)" sname="audio" ename="emotion">
		<listen address="feature@audio"/>
	</object>
	
	<!-- event sender -->
	<object create="ssi_consumer_XMLEventSender" sname="xml" ename="emotion" path="emospeech.xml" monitor="true" mname="RESULT" mpos="800,300,400,300" console="false" update="100" coldelim=" ">
		<listen address="@"/>
	</object>
	<gate open="$(activemq:use)">
		<object create="ssi_listener_ActiveMQEvent" brokerURI="$(activemq:uri)" id="$(activemq:id)" topic="$(activemq:topic)">
			<listen address="emotion@xml"/>
		</object>		
	</gate>
		
	<!-- browser -->
	<object create="ssi_object_EventPainter" name="EMOTION" move="1,0,800,0,400,300" type="1" global="true" reset="false" autoscale="false" fix="1.0">
		<listen address="emotion@audio"/>
	</object>
	
	<!-- visualization -->	
	<consumer create="ssi_consumer_SignalPainter" name="AUDIO - RAW" size="10" type="2" move="1,0,400,0,400,300" autoscale="false" fix="-1.0,1.0">
		<input pin="audio" frame="0.02s"/>
	</consumer>
	<consumer create="ssi_consumer_SignalPainter" name="AUDIO - ACTIVITY" size="10" type="0" move="1,0,400,300,400,300">
		<input pin="vad" frame="0.02s"/>
	</consumer>	
	
	<!-- wav output -->
	<gate close="$(live)">
		<consumer create="ssi_consumer_AudioPlayer" option="options/aplayer">
			<input pin="audio" frame="0.1s"/>
		</consumer>
	</gate>
	
	<!-- capture user -->
	<gate open="$(capture:use)">
	
		<!-- capture user -->
		<gate open="$(capture:user)">
		
			<sensor create="ssi_sensor_Camera" option="options/camera" flip="true" >
				<provider channel="video" pin="camera" size="2.0"/>
			</sensor>	
			<consumer create="ssi_consumer_FFMPEGWriter" url="$(capture:dir)/$(date)_user.mp4">
				<input pin="camera;audio" frame="1"/>				
			</consumer>	
			<consumer create="ssi_consumer_VideoPainter" name="CAMERA" flip="false" move="1,0,20,620,320,240">
				<input pin="camera" frame="1" delta="0"/>
			</consumer>			
			
		</gate>
		
		<!-- capture screen -->
		<gate open="$(capture:screen)">
		
			<sensor create="ssi_sensor_CameraScreen" full="false" region="400,0,800,600" fps="25">
				<provider channel="video" pin="screen" size="2.0"/>
			</sensor>			
			<consumer create="ssi_consumer_FFMPEGWriter" url="$(capture:dir)/$(date)_screen.mp4">
				<input pin="screen" frame="1"/>				
			</consumer>				
			<consumer create="ssi_consumer_VideoPainter" name="SCREEN" flip="false" move="1,0,340,620,320,240">
				<input pin="screen" frame="1" delta="0"/>
			</consumer>			
		
		</gate>
		
	</gate>
		
</pipeline>
